package Programmers;

import java.util.ArrayDeque;
import java.util.Deque;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Stack;

// https://programmers.co.kr/learn/courses/30/lessons/76502
public class Number_76502 {

	public static void main(String[] args) {

	}
	
	public int solution(String s) {
		
		Queue<Character> q = new LinkedList<Character>();
		
		int n = s.length();
		
		for(int i =0; i<n; i++) {
			q.add(s.charAt(i));
		}
		
		int answer = 0;
	
		for(int i =0; i<n; i++) {
			if(check(q))
				answer++;
			
			q.add(q.poll());
			
		}
		
		
	 
	    return answer;
	}
	
	static boolean check(Queue<Character> q) {
		
		Stack<Character> stack = new Stack<Character>();
		stack.addAll(q);
		
		int open1 = 0;
		int open2 = 0;
		int open3 = 0;
		int close1 = 0;
		int close2 = 0;
		int close3 = 0;
		
		
		while(!stack.isEmpty()) {
			switch(stack.pop()) {		
			case '(' : open1++; 
			break;
			case '{' : open2++; 
			break;
			case '[' : open3++; 
			break;
			case ')' : close1++; 
			break;
			case '}' : close2++; 
			break;
			case ']' : close3++; 
			break;
			}
			
			if(close1 >open1 || close2 >open2 || close3 >open3 ) {
				return false;
			}
		}
		return true;
		
	}
	
}
















