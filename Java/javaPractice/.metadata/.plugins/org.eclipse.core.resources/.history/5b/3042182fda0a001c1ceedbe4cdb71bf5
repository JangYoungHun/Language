package acmicpc.net;

import java.util.Arrays;
import java.util.Comparator;
import java.util.Scanner;
import java.util.Stack;


//https://www.acmicpc.net/problem/2565
public class Number_2565 {

	static class Line {
		int a;
		int b;

		Line(int a, int b) {
			this.a = a;
			this.b = b;
		}
	}

	public static void main(String[] args) {
	
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		
		Line lines[] = new Line[n];

		
		for(int i=0; i<n; i++) {
			lines[i] = new Line(sc.nextInt(),sc.nextInt());	
		}
		
		int result1 =sort(lines , 0) ;
		int result2 =sort(lines , 1) ;
		int result = Math.max(result1, result2);
		System.out.println(result);
		
	}
	
	static int sort(Line[] lines ,int type ) {
		Comparator<Line> comparator = null;
		int removeCnt =0;
		if(type == 0) {
			 comparator = new Comparator<Line>() {
					@Override
					public int compare(Line o1, Line o2) {
						// TODO Auto-generated method stub
						return o1.a -o2.a;
					}
				};
		}
		else if(type ==1) {
			 comparator = new Comparator<Line>() {
					@Override
					public int compare(Line o1, Line o2) {
						// TODO Auto-generated method stub
						return o1.b -o2.b;
					}
				};
		}
		
		Arrays.sort(lines, comparator);
		
		Stack<Line> stack = new Stack<Line>();
		
		for(int i =0; i<lines.length; i++) {
			if(stack.isEmpty())
				stack.add(lines[i]);
			else {
				while(!stack.isEmpty()) {
					Line top = stack.peek();
					if(top.a < lines[i].a && top.b <lines[i].b) {
						stack.add(lines[i]);
						break;
					}
					else {
						stack.pop();
						removeCnt++;
					}
				}
			}
		}
		
		return removeCnt;
	}

}
